def COLOR_MAP = [
    FAILURE: 'danger',
    SUCCESS: 'good'
]
pipeline {
    agent any

    environment {
        AWS_CREDENTIALS_ID = 'admin'   // The ID of your AWS credentials in Jenkins
        AWS_REGION = 'us-west-1'                 // Your AWS region
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your Terraform project from version control
                git branch: 'main', url: 'https://github.com/Ohabbak/infrastrucure-setup.git'
            }
        }


        stage('Terraform Apply') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                    // Apply the Terraform plan
                    sh """
                    cd terraform
                    terraform init
                    terraform apply -auto-approve
                    cd ..
                    """
                }
            }
        }

        stage('Setup connection') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                    sh './jumphost-setup.sh'
                }
            }
        }

        stage('Setup Ansible') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                    sh '''
                    cd terraform
                    export private_ip=$(terraform output --raw Private_instance_ip)
                    cd ../ansible
                    ansible-playbook -i inventory setup-k3s.yml 
                    sed -i "s/127.0.0.1/$private_ip/g" /home/jenkins/.kube/config
                    ansible-playbook -i inventory setup-proxy.yml
                    '''
                }
            }
        }
    }
    post {
        always {
            echo 'Slack Notifications'
            script {
                def color = COLOR_MAP[currentBuild.currentResult] ?: 'warning' // Default to 'warning' if build result is not FAILURE or SUCCESS
                slackSend (
                    color: color,
                    channel: '#pipelines',
                    message: "${currentBuild.currentResult} Job ${env.JOB_NAME}\nbuild ${env.BUILD_NUMBER}\nMore info at: ${env.BUILD_URL}"
                )
            }
        }
    }
}
